// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolRecords.Infrasctructure.Data.Context;

#nullable disable

namespace SchoolRecords.Infrasctructure.Data.Migrations
{
    [DbContext(typeof(SchoolRecordsContext))]
    [Migration("20230807130937_seed-enum-schooling")]
    partial class seedenumschooling
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolRecords.Domain.Entities.SchoolRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Format")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("SchoolRecords", (string)null);
                });

            modelBuilder.Entity("SchoolRecords.Domain.Entities.Schooling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Schoolings", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2023, 8, 7, 10, 9, 37, 477, DateTimeKind.Local).AddTicks(7298),
                            Description = "Infantil",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2023, 8, 7, 10, 9, 37, 477, DateTimeKind.Local).AddTicks(7336),
                            Description = "Fundamental",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTime(2023, 8, 7, 10, 9, 37, 477, DateTimeKind.Local).AddTicks(7340),
                            Description = "Medio",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTime(2023, 8, 7, 10, 9, 37, 477, DateTimeKind.Local).AddTicks(7343),
                            Description = "Supeior",
                            Type = 0
                        });
                });

            modelBuilder.Entity("SchoolRecords.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2023, 8, 6, 10, 9, 37, 478, DateTimeKind.Local).AddTicks(883));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SchoolRecordId")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolingId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("SchoolRecordId")
                        .IsUnique()
                        .HasFilter("[SchoolRecordId] IS NOT NULL");

                    b.HasIndex("SchoolingId")
                        .IsUnique()
                        .HasFilter("[SchoolingId] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SchoolRecords.Domain.Entities.User", b =>
                {
                    b.HasOne("SchoolRecords.Domain.Entities.SchoolRecord", "SchoolRecord")
                        .WithOne()
                        .HasForeignKey("SchoolRecords.Domain.Entities.User", "SchoolRecordId");

                    b.HasOne("SchoolRecords.Domain.Entities.Schooling", "Schooling")
                        .WithOne()
                        .HasForeignKey("SchoolRecords.Domain.Entities.User", "SchoolingId");

                    b.Navigation("SchoolRecord");

                    b.Navigation("Schooling");
                });
#pragma warning restore 612, 618
        }
    }
}
